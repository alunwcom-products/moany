plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
    id 'checkstyle'
}

repositories {
	mavenCentral()
}

checkstyle {
	configFile = 'src/test/resources/checkstyle.xml' as File
}

sourceCompatibility = '11'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'mysql:mysql-connector-java:8.0.23'
	implementation 'com.h2database:h2:1.4.200'
	implementation 'org.apache.poi:poi-ooxml:5.0.0'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	implementation 'org.springframework.security:spring-security-web:5.4.5'
	implementation 'org.springframework.security:spring-security-config:5.4.5'
	implementation 'org.springframework.security:spring-security-test:5.4.5'
	
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	
//	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.2'
//	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.2'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.4'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.11.4'

	//implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.23'
	//implementation group: 'no.api.freemarker', name: 'freemarker-java8', version: '1.2.0'
	//implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.2.11.Final'
	//implementation group: 'org.hibernate', name: 'hibernate-java8', version: '5.2.11.Final'
	//implementation group: 'org.hibernate', name: 'hibernate-c3p0', version: '5.2.11.Final'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	
	//testImplementation group: 'junit', name: 'junit', version: '4.12'
}

test {
	useJUnitPlatform()
}

// Build distribution - war file plus runnable zip package

def distFolder = file("$buildDir/distribution")
def distAssemblyFolder = file("$distFolder/$project.name")
def webappsFolder = file("$distAssemblyFolder/webapps/$project.name")

//println "BUILD FOLDER -> $buildDir"
//println "DIST ASSEMBLY FOLDER -> $distAssemblyFolder"

if ( ! version.equalsIgnoreCase("unspecified") ) { 
	println "VERSION -> ${version}"
} else { 
	project.version = "SNAPSHOT"
	println "NO VERSION DEFINED - CREATING SNAPSHOT"
}


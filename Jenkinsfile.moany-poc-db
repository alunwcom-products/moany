/*
 * Deploys the latest moany database backup.
 *
 * NOTE: this version uses the default docker network.
 *
 * Can choose database by setting Docker image:tag (e.g. mariadb or mysql)
 *
 * Requires username/password credentials for root and moany accounts:
 * MOANY_UAT_DB_ADMIN_CREDENTIALS (username/password)
 * MOANY_UAT_DB_APP_CREDENTIALS   (username/password)
 * MOANY_UAT_DB_MOUNT_POINT       (envvar)
 * MOANY_SQL_BACKUP_LOCATION      (envvar)
 * NOTIFICATION_RECIPIENTS        (envvar)
 *
 */
pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'mariadb:11.2'
        DOCKER_CONTAINER_NAME = 'moany-poc-db'
        MYSQL_HOST_PORT = 3336
        DB_ADMIN_CREDENTIALS = credentials('MOANY_UAT_DB_ADMIN_CREDENTIALS')
        DB_APP_CREDENTIALS = credentials('MOANY_UAT_DB_APP_CREDENTIALS')
        DB_MOUNT_POINT = "${MOANY_UAT_DB_MOUNT_POINT}"
        SQL_BACKUP_LOCATION = "${MOANY_SQL_BACKUP_LOCATION}"
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '7'))
        disableConcurrentBuilds()
    }
    stages {
        stage('replace-container') {
            steps {
                echo "Replacing container: ${DOCKER_CONTAINER_NAME} image = ${DOCKER_IMAGE};"
                echo "MYSQL_HOST_PORT = ${MYSQL_HOST_PORT}; DB_MOUNT_POINT = ${DB_MOUNT_POINT}; SQL_BACKUP_LOCATION = ${SQL_BACKUP_LOCATION}"
                sh '''
                    # remove container if exists
                    docker rm -f $DOCKER_CONTAINER_NAME || true

                    # update image
                    docker pull -q $DOCKER_IMAGE

                    # start container
                    docker run -d \
                        -p $MYSQL_HOST_PORT:3306 \
                        --name $DOCKER_CONTAINER_NAME \
                        -v $DB_MOUNT_POINT:/var/lib/mysql \
                        --restart unless-stopped \
                        -e MYSQL_ROOT_PASSWORD=$DB_ADMIN_CREDENTIALS_PSW \
                        -e MYSQL_DATABASE=$DB_APP_CREDENTIALS_USR \
                        -e MYSQL_USER=$DB_APP_CREDENTIALS_USR \
                        -e MYSQL_PASSWORD=$DB_APP_CREDENTIALS_PSW \
                        $DOCKER_IMAGE

                    # wait for startup before continuing
                    sleep 120
                '''
            }
        }
        stage('restore-db') {
            steps {
                echo "Restoring DB: backup = ${SQL_BACKUP_LOCATION}"
                sh '''
                    docker exec -i $DOCKER_CONTAINER_NAME sh \
                        -c "exec mariadb $DB_APP_CREDENTIALS_USR -u$DB_ADMIN_CREDENTIALS_USR -p$DB_ADMIN_CREDENTIALS_PSW" \
                        < $SQL_BACKUP_LOCATION
                '''
            }
        }
    }
    post {
        success {
            mail to: "${NOTIFICATION_RECIPIENTS}",
                subject: "Success: ${currentBuild.fullDisplayName} [${JOB_NAME}.${BUILD_NUMBER}]",
                body: "Build URL: ${env.BUILD_URL}"
        }
        failure {
            mail to: "${NOTIFICATION_RECIPIENTS}",
                subject: "Failure: ${currentBuild.fullDisplayName} [${JOB_NAME}.${BUILD_NUMBER}]",
                body: "Build URL: ${env.BUILD_URL}"
        }
    }
}
